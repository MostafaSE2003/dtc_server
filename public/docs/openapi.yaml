openapi: 3.0.3
info:
  title: 'DTC App'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/certificate-type:
    get:
      summary: ''
      operationId: getApiCertificateType
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Prof. Tanya Hintz Jr.'
                    -
                      id: 2
                      name: 'Nola Brakus'
                    -
                      id: 3
                      name: 'Anya Cronin I'
                    -
                      id: 4
                      name: 'Trevion Bechtelar Jr.'
                    -
                      id: 5
                      name: 'Ms. Mina Lind IV'
                    -
                      id: 6
                      name: 'Terence Zemlak'
                    -
                      id: 7
                      name: 'Missouri Kuhlman'
                    -
                      id: 8
                      name: 'Mr. Johann Rempel'
                    -
                      id: 9
                      name: 'Gabriella McGlynn'
                    -
                      id: 10
                      name: 'Chelsea Ferry'
                    -
                      id: 11
                      name: 'Keshaun Schimmel III'
                    -
                      id: 12
                      name: 'Cyrus Braun'
                    -
                      id: 13
                      name: 'Brennon Greenholt'
                    -
                      id: 14
                      name: 'Ms. Joyce Hyatt'
                    -
                      id: 15
                      name: 'Cyrus Flatley'
                    -
                      id: 16
                      name: 'Noe Pfannerstill'
                    -
                      id: 17
                      name: 'Elinor Schaden'
                    -
                      id: 18
                      name: 'Victor Erdman'
                    -
                      id: 19
                      name: 'Mr. Murl Ernser Sr.'
                    -
                      id: 20
                      name: 'Citlalli Breitenberg'
                    -
                      id: 21
                      name: 'Verner Wolf III'
                    -
                      id: 22
                      name: 'Buddy Schamberger'
                    -
                      id: 23
                      name: 'Prof. Santos Pacocha'
                    -
                      id: 24
                      name: 'Major Kemmer'
                    -
                      id: 25
                      name: 'Michelle Goyette Jr.'
                    -
                      id: 26
                      name: 'Prof. Durward Stroman DDS'
                    -
                      id: 27
                      name: 'Brady Turcotte'
                    -
                      id: 28
                      name: 'Mrs. Layla Flatley'
                    -
                      id: 29
                      name: 'Miss Yolanda Wilkinson II'
                    -
                      id: 30
                      name: 'Dr. Dereck Legros Sr.'
                    -
                      id: 31
                      name: 'Kim Schulist V'
                    -
                      id: 32
                      name: 'Chloe Bartoletti'
                    -
                      id: 33
                      name: 'Hilma Rogahn'
                    -
                      id: 34
                      name: 'Verda Krajcik II'
                    -
                      id: 35
                      name: 'Lyda Wisozk'
                    -
                      id: 36
                      name: 'Antonia Lind'
                    -
                      id: 37
                      name: 'Gerda Blanda'
                    -
                      id: 38
                      name: 'Prof. Savannah Kutch'
                    -
                      id: 39
                      name: 'Giovanni Stracke'
                    -
                      id: 40
                      name: 'Aiden Dare'
                    -
                      id: 41
                      name: 'Thelma Howell'
                    -
                      id: 42
                      name: 'Rozella Morar'
                    -
                      id: 43
                      name: 'Prof. Darwin Gislason Sr.'
                    -
                      id: 44
                      name: 'Dr. Laverne Bernier'
                    -
                      id: 45
                      name: 'Mr. Price McDermott'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Prof. Tanya Hintz Jr.'
                      -
                        id: 2
                        name: 'Nola Brakus'
                      -
                        id: 3
                        name: 'Anya Cronin I'
                      -
                        id: 4
                        name: 'Trevion Bechtelar Jr.'
                      -
                        id: 5
                        name: 'Ms. Mina Lind IV'
                      -
                        id: 6
                        name: 'Terence Zemlak'
                      -
                        id: 7
                        name: 'Missouri Kuhlman'
                      -
                        id: 8
                        name: 'Mr. Johann Rempel'
                      -
                        id: 9
                        name: 'Gabriella McGlynn'
                      -
                        id: 10
                        name: 'Chelsea Ferry'
                      -
                        id: 11
                        name: 'Keshaun Schimmel III'
                      -
                        id: 12
                        name: 'Cyrus Braun'
                      -
                        id: 13
                        name: 'Brennon Greenholt'
                      -
                        id: 14
                        name: 'Ms. Joyce Hyatt'
                      -
                        id: 15
                        name: 'Cyrus Flatley'
                      -
                        id: 16
                        name: 'Noe Pfannerstill'
                      -
                        id: 17
                        name: 'Elinor Schaden'
                      -
                        id: 18
                        name: 'Victor Erdman'
                      -
                        id: 19
                        name: 'Mr. Murl Ernser Sr.'
                      -
                        id: 20
                        name: 'Citlalli Breitenberg'
                      -
                        id: 21
                        name: 'Verner Wolf III'
                      -
                        id: 22
                        name: 'Buddy Schamberger'
                      -
                        id: 23
                        name: 'Prof. Santos Pacocha'
                      -
                        id: 24
                        name: 'Major Kemmer'
                      -
                        id: 25
                        name: 'Michelle Goyette Jr.'
                      -
                        id: 26
                        name: 'Prof. Durward Stroman DDS'
                      -
                        id: 27
                        name: 'Brady Turcotte'
                      -
                        id: 28
                        name: 'Mrs. Layla Flatley'
                      -
                        id: 29
                        name: 'Miss Yolanda Wilkinson II'
                      -
                        id: 30
                        name: 'Dr. Dereck Legros Sr.'
                      -
                        id: 31
                        name: 'Kim Schulist V'
                      -
                        id: 32
                        name: 'Chloe Bartoletti'
                      -
                        id: 33
                        name: 'Hilma Rogahn'
                      -
                        id: 34
                        name: 'Verda Krajcik II'
                      -
                        id: 35
                        name: 'Lyda Wisozk'
                      -
                        id: 36
                        name: 'Antonia Lind'
                      -
                        id: 37
                        name: 'Gerda Blanda'
                      -
                        id: 38
                        name: 'Prof. Savannah Kutch'
                      -
                        id: 39
                        name: 'Giovanni Stracke'
                      -
                        id: 40
                        name: 'Aiden Dare'
                      -
                        id: 41
                        name: 'Thelma Howell'
                      -
                        id: 42
                        name: 'Rozella Morar'
                      -
                        id: 43
                        name: 'Prof. Darwin Gislason Sr.'
                      -
                        id: 44
                        name: 'Dr. Laverne Bernier'
                      -
                        id: 45
                        name: 'Mr. Price McDermott'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Prof. Tanya Hintz Jr.'
      tags:
        - AcademicRegistration
      security: []
  '/api/certificate-type/{certificateType_id}/department':
    get:
      summary: ''
      operationId: getApiCertificateTypeCertificateType_idDepartment
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 15
                      name: 'Waylon Spinka'
                      mark: null
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 15
                        name: 'Waylon Spinka'
                        mark: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 15
                        name:
                          type: string
                          example: 'Waylon Spinka'
                        mark:
                          type: string
                          example: null
      tags:
        - AcademicRegistration
      security: []
    parameters:
      -
        in: path
        name: certificateType_id
        description: 'Optional parameter. The ID of the certificateType.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 20
  /api/auth:
    post:
      summary: ''
      operationId: postApiAuth
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 2|B3cNCg7I0C4d8nWlf0llh4K8nCUIiAqDzKpDYT2J36f64fd6
                properties:
                  token:
                    type: string
                    example: 2|B3cNCg7I0C4d8nWlf0llh4K8nCUIiAqDzKpDYT2J36f64fd6
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: my@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password
                role:
                  type: string
                  description: 'The role of the user.'
                  example: student_browser
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 2|P8B12xD28iwcQ1A7Kbm7fJk0GhT9iVJwuBZsoMTxa9e9dd0b
                properties:
                  token:
                    type: string
                    example: 2|P8B12xD28iwcQ1A7Kbm7fJk0GhT9iVJwuBZsoMTxa9e9dd0b
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name_en:
                  type: string
                  description: ''
                  example: consequatur
                last_name_en:
                  type: string
                  description: ''
                  example: neque
                first_name_ar:
                  type: string
                  description: ''
                  example: quia
                last_name_ar:
                  type: string
                  description: ''
                  example: vero
                phone:
                  type: string
                  description: ''
                  example: amet
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lcarter@example.net
                password:
                  type: string
                  description: ''
                  example: '@:e/(<oeo7'
                role:
                  type: string
                  description: ''
                  example: teacher
                  enum:
                    - student
                    - teacher
                    - student_browser
                    - teacher_browser
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
              required:
                - first_name_en
                - last_name_en
                - first_name_ar
                - last_name_ar
                - phone
                - email
                - password
                - role
  /api/auth/logout:
    post:
      summary: Logout
      operationId: logout
      description: ''
      parameters: []
      responses:
        204:
          description: 'Logout Success'
        401:
          description: 'User Not Login Yet'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/auth/profile:
    get:
      summary: ''
      operationId: getApiAuthProfile
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 10
                    first_name_en: 'Prof. Kevon Braun'
                    last_name_en: 'Winnifred Kutch'
                    first_name_ar: 'Merl Kuphal'
                    last_name_ar: 'Violette Mayert'
                    email: rdenesik@example.net
                    email_verified_at: '2023-09-16T08:23:57.000000Z'
                    image: null
                    created_at: '2023-09-16T08:23:57.000000Z'
                    updated_at: '2023-09-16T08:23:57.000000Z'
                    role_id: 3
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 10
                      first_name_en:
                        type: string
                        example: 'Prof. Kevon Braun'
                      last_name_en:
                        type: string
                        example: 'Winnifred Kutch'
                      first_name_ar:
                        type: string
                        example: 'Merl Kuphal'
                      last_name_ar:
                        type: string
                        example: 'Violette Mayert'
                      email:
                        type: string
                        example: rdenesik@example.net
                      email_verified_at:
                        type: string
                        example: '2023-09-16T08:23:57.000000Z'
                      image:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-09-16T08:23:57.000000Z'
                      updated_at:
                        type: string
                        example: '2023-09-16T08:23:57.000000Z'
                      role_id:
                        type: integer
                        example: 3
      tags:
        - Authentication
  /api/auth/role:
    get:
      summary: ''
      operationId: getApiAuthRole
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  role: teacher_browser
                properties:
                  role:
                    type: string
                    example: teacher_browser
      tags:
        - Authentication
  /api/auth/teacher:
    post:
      summary: 'add information for teacher'
      operationId: addInformationForTeacher
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"your have old request please wait to accept\"\n\"message\": \"your request in wait\"\n}"
        401:
          description: 'Account Not teacher'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The certificate field is required. (and 6 more errors)\",\n\"errors\": {\n\"certificate\": [\n\"The certificate field is required.\"\n],\n\"specialty\": [\n\"The specialty field is required.\"\n],\n\"birth_date\": [\n\"The birth date field is required.\"\n\"The birth date field must be a date before today.\"\n],\n\"current_location\": [\n\"The current location field is required.\"\n],\n\"permanent_location\": [\n\"The permanent location field is required.\"\n],\n\"nationality\": [\n\"The nationality field is required.\"\n],\n\"department_id\": [\n\"The department id field is required.\"\n\"The selected department id is invalid.\"\n]\n}\n}\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: string
                  description: ''
                  example: blanditiis
                specialty:
                  type: string
                  description: ''
                  example: occaecati
                birth_date:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>09/16/2023</code>.'
                  example: '2021-05-11'
                current_location:
                  type: string
                  description: ''
                  example: ut
                permanent_location:
                  type: string
                  description: ''
                  example: iure
                nationality:
                  type: string
                  description: ''
                  example: beatae
                department_id:
                  type: number
                  description: ''
                  example: 1519.0
              required:
                - certificate
                - specialty
                - birth_date
                - current_location
                - permanent_location
                - nationality
                - department_id
  /api/course:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Course
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Course
  '/api/course/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Course
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Course
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Course
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/course/{course_id}/register':
    post:
      summary: ''
      operationId: postApiCourseCourse_idRegister
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  is_male: false
                  social_status: sit
                  nationality: et
                  address: dolorum
                  date_of_birth: '2023-09-15T21:00:00.000000Z'
                  student_type: ut
                  work_type: autem
                  is_morning: false
                  user_id: 10
                  course_id: 1
                  updated_at: '2023-09-16T11:50:16.000000Z'
                  created_at: '2023-09-16T11:50:16.000000Z'
                  id: 1
                properties:
                  is_male:
                    type: boolean
                    example: false
                  social_status:
                    type: string
                    example: sit
                  nationality:
                    type: string
                    example: et
                  address:
                    type: string
                    example: dolorum
                  date_of_birth:
                    type: string
                    example: '2023-09-15T21:00:00.000000Z'
                  student_type:
                    type: string
                    example: ut
                  work_type:
                    type: string
                    example: autem
                  is_morning:
                    type: boolean
                    example: false
                  user_id:
                    type: integer
                    example: 10
                  course_id:
                    type: integer
                    example: 1
                  updated_at:
                    type: string
                    example: '2023-09-16T11:50:16.000000Z'
                  created_at:
                    type: string
                    example: '2023-09-16T11:50:16.000000Z'
                  id:
                    type: integer
                    example: 1
      tags:
        - Course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_male:
                  type: boolean
                  description: ''
                  example: false
                social_status:
                  type: string
                  description: ''
                  example: sit
                nationality:
                  type: string
                  description: ''
                  example: et
                address:
                  type: string
                  description: ''
                  example: dolorum
                date_of_birth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-09-16T14:50:16'
                student_type:
                  type: string
                  description: ''
                  example: ut
                work_type:
                  type: string
                  description: ''
                  example: autem
                is_morning:
                  type: boolean
                  description: ''
                  example: false
              required:
                - is_male
                - social_status
                - nationality
                - address
                - date_of_birth
                - student_type
                - work_type
                - is_morning
    parameters:
      -
        in: path
        name: course_id
        description: 'The ID of the course.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/section/{sectionId}/departments':
    get:
      summary: 'See departments of section'
      operationId: seeDepartmentsOfSection
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 40
                      name: 'Stanley Hartmann MD'
                      mark: null
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 40
                        name: 'Stanley Hartmann MD'
                        mark: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 40
                        name:
                          type: string
                          example: 'Stanley Hartmann MD'
                        mark:
                          type: string
                          example: null
      tags:
        - Department
      security: []
    parameters:
      -
        in: path
        name: sectionId
        description: ''
        example: velit
        required: true
        schema:
          type: string
  /api/editMark:
    post:
      summary: 'Create Move'
      operationId: createMove
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    subject: علوم
                    mark: '100'
                    reason: ناجح
                    teacher: ديزيجينيتيد
                    user:
                      id: 51
                      first_name_en: "Finn O'Keefe"
                      last_name_en: 'Celia Corkery MD'
                      first_name_ar: 'Kelton Beer'
                      last_name_ar: 'Prof. Verna Simonis Sr.'
                      email: greg76@example.com
                      phone: '(845) 458-3243'
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                properties:
                  data:
                    type: object
                    properties:
                      subject:
                        type: string
                        example: علوم
                      mark:
                        type: string
                        example: '100'
                      reason:
                        type: string
                        example: ناجح
                      teacher:
                        type: string
                        example: ديزيجينيتيد
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 51
                          first_name_en:
                            type: string
                            example: "Finn O'Keefe"
                          last_name_en:
                            type: string
                            example: 'Celia Corkery MD'
                          first_name_ar:
                            type: string
                            example: 'Kelton Beer'
                          last_name_ar:
                            type: string
                            example: 'Prof. Verna Simonis Sr.'
                          email:
                            type: string
                            example: greg76@example.com
                          phone:
                            type: string
                            example: '(845) 458-3243'
                          password:
                            type: string
                            example: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
        401:
          description: 'Account Not teacher'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"subject\": [\n\"The subject field is required.\"\n],\n\"mark\": [\n\"The mark field is required.\"\n\"The mark field must not be greater than 100.\"\n\"The mark field must be at least 0.\"\n\n],\n\"reason\": [\n\"The reason field is required.\"\n],\n\"teacher\": [\n\"The teacher field is required.\"\n]\n}\n}"
      tags:
        - 'Edit Mark'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: et
                mark:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 100.'
                  example: 19
                reason:
                  type: string
                  description: ''
                  example: accusantium
                teacher:
                  type: string
                  description: ''
                  example: aspernatur
              required:
                - subject
                - mark
                - reason
                - teacher
      security: []
  /api/move:
    post:
      summary: 'Create Move'
      operationId: createMove
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 6
                    text: text
                    user_id:
                      id: 1
                      first_name_en: Admin
                      last_name_en: Admin
                      first_name_ar: Admin
                      last_name_ar: Admin
                      email: super.admin@admin.com
                      phone: 279-206-5241
                      password: $2y$10$cGVmTLp/ZiKauYKZkkJpke03d.dchqpu6r62EWod/JgLpQh5J3m2.
                    department_id:
                      id: 1
                      name: 'Jarvis Bogisich'
                      mark: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      text:
                        type: string
                        example: text
                      user_id:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          first_name_en:
                            type: string
                            example: Admin
                          last_name_en:
                            type: string
                            example: Admin
                          first_name_ar:
                            type: string
                            example: Admin
                          last_name_ar:
                            type: string
                            example: Admin
                          email:
                            type: string
                            example: super.admin@admin.com
                          phone:
                            type: string
                            example: 279-206-5241
                          password:
                            type: string
                            example: $2y$10$cGVmTLp/ZiKauYKZkkJpke03d.dchqpu6r62EWod/JgLpQh5J3m2.
                      department_id:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Jarvis Bogisich'
                          mark:
                            type: string
                            example: null
        401:
          description: 'Account Not teacher'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The text field is required. (and 2 more errors)\",\n\"errors\": {\n\"text\": [\n\"The text field is required.\"\n],\n\"department_id\": [\n\"The department id field is required.\"\n\"The selected department id is invalid.\"\n]\n}\n}"
      tags:
        - Move
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: maxime
                department_id:
                  type: number
                  description: ''
                  example: 3376785.0
              required:
                - text
                - department_id
      security: []
  /api/note:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Note
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected note category id is invalid.'
                  errors:
                    note_category_id:
                      - 'The selected note category id is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected note category id is invalid.'
                  errors:
                    type: object
                    properties:
                      note_category_id:
                        type: array
                        example:
                          - 'The selected note category id is invalid.'
                        items:
                          type: string
      tags:
        - Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quam
                description:
                  type: string
                  description: ''
                  example: 'Consequatur necessitatibus est nulla nobis cupiditate.'
                category_name:
                  type: string
                  description: ''
                  example: null
                note_category_id:
                  type: integer
                  description: ''
                  example: 11
              required:
                - title
                - description
  '/api/note/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: 'Mollitia et ab excepturi et temporibus.'
                    description: 'Cumque beatae voluptas quam repellendus in molestiae. Eius dolores sit natus voluptas facere.'
                    category: 'Curt Mraz'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Mollitia et ab excepturi et temporibus.'
                      description:
                        type: string
                        example: 'Cumque beatae voluptas quam repellendus in molestiae. Eius dolores sit natus voluptas facere.'
                      category:
                        type: string
                        example: 'Curt Mraz'
      tags:
        - Note
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: voluptatem
                    description: 'Sed alias eligendi aut blanditiis.'
                    category: 'Curt Mraz'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: voluptatem
                      description:
                        type: string
                        example: 'Sed alias eligendi aut blanditiis.'
                      category:
                        type: string
                        example: 'Curt Mraz'
      tags:
        - Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: voluptatem
                description:
                  type: string
                  description: ''
                  example: 'Sed alias eligendi aut blanditiis.'
                category_name:
                  type: string
                  description: ''
                  example: null
                note_category_id:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - description
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Note
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the note.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user/note-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Note
  /api/post:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: type
          description: 'the type of the post (public, department ,course).'
          example: labore
          required: false
          schema:
            type: string
            description: 'the type of the post (public, department ,course).'
            example: labore
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2
                      content: 'Iure ut qui non voluptatem. Voluptas rerum alias repellendus explicabo hic cupiditate. Vero esse non itaque et. Aut sit id omnis. Eos nemo architecto voluptas numquam laudantium ex minus autem.'
                      attachment: voluptates
                      attachment_type: image
                      likes: 0
                      liked_by_me: false
                      saves: 0
                      saved_by_me: false
                      created_at: '3 hours ago'
                    -
                      id: 12
                      content: 'Consequatur et similique autem ipsam quis quasi deserunt. Quaerat non sit libero eos. Sit doloremque officiis dolore sed.'
                      attachment: odio
                      attachment_type: image
                      likes: 0
                      liked_by_me: false
                      saves: 1
                      saved_by_me: false
                      created_at: '3 hours ago'
                    -
                      id: 14
                      content: 'Voluptas consequatur vel sint sed repellat eum impedit excepturi. Et officiis rerum ut quas. Voluptatum quis repudiandae deserunt. Mollitia voluptatibus ullam eaque fuga sint.'
                      attachment: aut
                      attachment_type: file
                      likes: 0
                      liked_by_me: false
                      saves: 1
                      saved_by_me: false
                      created_at: '3 hours ago'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2
                        content: 'Iure ut qui non voluptatem. Voluptas rerum alias repellendus explicabo hic cupiditate. Vero esse non itaque et. Aut sit id omnis. Eos nemo architecto voluptas numquam laudantium ex minus autem.'
                        attachment: voluptates
                        attachment_type: image
                        likes: 0
                        liked_by_me: false
                        saves: 0
                        saved_by_me: false
                        created_at: '3 hours ago'
                      -
                        id: 12
                        content: 'Consequatur et similique autem ipsam quis quasi deserunt. Quaerat non sit libero eos. Sit doloremque officiis dolore sed.'
                        attachment: odio
                        attachment_type: image
                        likes: 0
                        liked_by_me: false
                        saves: 1
                        saved_by_me: false
                        created_at: '3 hours ago'
                      -
                        id: 14
                        content: 'Voluptas consequatur vel sint sed repellat eum impedit excepturi. Et officiis rerum ut quas. Voluptatum quis repudiandae deserunt. Mollitia voluptatibus ullam eaque fuga sint.'
                        attachment: aut
                        attachment_type: file
                        likes: 0
                        liked_by_me: false
                        saves: 1
                        saved_by_me: false
                        created_at: '3 hours ago'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        content:
                          type: string
                          example: 'Iure ut qui non voluptatem. Voluptas rerum alias repellendus explicabo hic cupiditate. Vero esse non itaque et. Aut sit id omnis. Eos nemo architecto voluptas numquam laudantium ex minus autem.'
                        attachment:
                          type: string
                          example: voluptates
                        attachment_type:
                          type: string
                          example: image
                        likes:
                          type: integer
                          example: 0
                        liked_by_me:
                          type: boolean
                          example: false
                        saves:
                          type: integer
                          example: 0
                        saved_by_me:
                          type: boolean
                          example: false
                        created_at:
                          type: string
                          example: '3 hours ago'
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: course
                  enum:
                    - public
                    - department
                    - course
              required:
                - type
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: unauthorized
                properties:
                  message:
                    type: string
                    example: unauthorized
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: aut
                attachment:
                  type: string
                  description: ''
                  example: praesentium
                attachment_type:
                  type: string
                  description: ''
                  example: ipsum
                user_id:
                  type: number
                  description: ''
                  example: 432345098.7
                department_id:
                  type: number
                  description: ''
                  example: 441045828.1
                course_id:
                  type: number
                  description: ''
                  example: 104.0
                post_type_id:
                  type: number
                  description: ''
                  example: 0.4856994
              required:
                - content
                - attachment
                - attachment_type
                - user_id
                - department_id
                - course_id
                - post_type_id
  '/api/post/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: unauthorized
                properties:
                  message:
                    type: string
                    example: unauthorized
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: dolorum
                attachment:
                  type: string
                  description: ''
                  example: recusandae
                attachment_type:
                  type: string
                  description: ''
                  example: consequatur
                user_id:
                  type: number
                  description: ''
                  example: 75858608.067081
                department_id:
                  type: number
                  description: ''
                  example: 2.74408777
                course_id:
                  type: number
                  description: ''
                  example: 492588.53
                post_type_id:
                  type: number
                  description: ''
                  example: 6.0
              required:
                - content
                - attachment
                - attachment_type
                - user_id
                - department_id
                - course_id
                - post_type_id
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: unauthorized
                properties:
                  message:
                    type: string
                    example: unauthorized
      tags:
        - Post
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/post/{post_id}/like':
    post:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Post
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/post/{post_id}/save':
    post:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Post
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  /api/sections:
    get:
      summary: 'See all section'
      operationId: seeAllSection
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Kara Jenkins'
                    -
                      id: 2
                      name: "Prof. Brett O'Keefe"
                    -
                      id: 3
                      name: 'Fleta Waters'
                    -
                      id: 4
                      name: 'Prof. Charles Lubowitz Jr.'
                    -
                      id: 5
                      name: 'Dr. Lempi Kshlerin'
                    -
                      id: 6
                      name: 'Trudie Dicki DVM'
                    -
                      id: 7
                      name: 'Ethan Jones'
                    -
                      id: 8
                      name: 'Mrs. Corrine Huels Sr.'
                    -
                      id: 9
                      name: 'Landen Mueller'
                    -
                      id: 10
                      name: 'Hailey Schaefer'
                    -
                      id: 11
                      name: 'Oleta Huel'
                    -
                      id: 12
                      name: 'Brad Cummerata IV'
                    -
                      id: 13
                      name: 'Aleen Veum DVM'
                    -
                      id: 14
                      name: 'Blaise Upton'
                    -
                      id: 15
                      name: 'Mathilde Monahan Jr.'
                    -
                      id: 16
                      name: 'Eleonore Barton'
                    -
                      id: 17
                      name: 'Jonathan Kiehn'
                    -
                      id: 18
                      name: 'Mr. Deion Morar Sr.'
                    -
                      id: 19
                      name: 'Miss Estefania Altenwerth'
                    -
                      id: 20
                      name: 'Ethan Reichel'
                    -
                      id: 21
                      name: 'Lessie Denesik IV'
                    -
                      id: 22
                      name: 'Prof. Glennie Turcotte I'
                    -
                      id: 23
                      name: 'Maida Lesch'
                    -
                      id: 24
                      name: 'Margret Howell'
                    -
                      id: 25
                      name: 'Donavon Pollich'
                    -
                      id: 26
                      name: 'Dr. Jaunita McDermott'
                    -
                      id: 27
                      name: 'Dallas Miller PhD'
                    -
                      id: 28
                      name: 'Cindy Tillman'
                    -
                      id: 29
                      name: 'Penelope Rau'
                    -
                      id: 30
                      name: 'Cornell Kling'
                    -
                      id: 31
                      name: 'Elouise Adams'
                    -
                      id: 32
                      name: 'Amely Keeling I'
                    -
                      id: 33
                      name: 'Loren Hahn'
                    -
                      id: 34
                      name: 'Hassie Bogan'
                    -
                      id: 35
                      name: 'Matilda Ortiz'
                    -
                      id: 36
                      name: 'Gabe Quigley MD'
                    -
                      id: 37
                      name: 'Junior Reynolds'
                    -
                      id: 38
                      name: 'Ashton Pfannerstill'
                    -
                      id: 39
                      name: 'Branson Jacobi'
                    -
                      id: 40
                      name: 'Trinity Lind'
                    -
                      id: 41
                      name: 'Dr. Brady Hill'
                    -
                      id: 42
                      name: 'Tommie Russel'
                    -
                      id: 43
                      name: 'Blair Feest IV'
                    -
                      id: 44
                      name: 'Dr. Adah Wiegand'
                    -
                      id: 45
                      name: 'Prof. Billie Kuvalis Jr.'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Kara Jenkins'
                      -
                        id: 2
                        name: "Prof. Brett O'Keefe"
                      -
                        id: 3
                        name: 'Fleta Waters'
                      -
                        id: 4
                        name: 'Prof. Charles Lubowitz Jr.'
                      -
                        id: 5
                        name: 'Dr. Lempi Kshlerin'
                      -
                        id: 6
                        name: 'Trudie Dicki DVM'
                      -
                        id: 7
                        name: 'Ethan Jones'
                      -
                        id: 8
                        name: 'Mrs. Corrine Huels Sr.'
                      -
                        id: 9
                        name: 'Landen Mueller'
                      -
                        id: 10
                        name: 'Hailey Schaefer'
                      -
                        id: 11
                        name: 'Oleta Huel'
                      -
                        id: 12
                        name: 'Brad Cummerata IV'
                      -
                        id: 13
                        name: 'Aleen Veum DVM'
                      -
                        id: 14
                        name: 'Blaise Upton'
                      -
                        id: 15
                        name: 'Mathilde Monahan Jr.'
                      -
                        id: 16
                        name: 'Eleonore Barton'
                      -
                        id: 17
                        name: 'Jonathan Kiehn'
                      -
                        id: 18
                        name: 'Mr. Deion Morar Sr.'
                      -
                        id: 19
                        name: 'Miss Estefania Altenwerth'
                      -
                        id: 20
                        name: 'Ethan Reichel'
                      -
                        id: 21
                        name: 'Lessie Denesik IV'
                      -
                        id: 22
                        name: 'Prof. Glennie Turcotte I'
                      -
                        id: 23
                        name: 'Maida Lesch'
                      -
                        id: 24
                        name: 'Margret Howell'
                      -
                        id: 25
                        name: 'Donavon Pollich'
                      -
                        id: 26
                        name: 'Dr. Jaunita McDermott'
                      -
                        id: 27
                        name: 'Dallas Miller PhD'
                      -
                        id: 28
                        name: 'Cindy Tillman'
                      -
                        id: 29
                        name: 'Penelope Rau'
                      -
                        id: 30
                        name: 'Cornell Kling'
                      -
                        id: 31
                        name: 'Elouise Adams'
                      -
                        id: 32
                        name: 'Amely Keeling I'
                      -
                        id: 33
                        name: 'Loren Hahn'
                      -
                        id: 34
                        name: 'Hassie Bogan'
                      -
                        id: 35
                        name: 'Matilda Ortiz'
                      -
                        id: 36
                        name: 'Gabe Quigley MD'
                      -
                        id: 37
                        name: 'Junior Reynolds'
                      -
                        id: 38
                        name: 'Ashton Pfannerstill'
                      -
                        id: 39
                        name: 'Branson Jacobi'
                      -
                        id: 40
                        name: 'Trinity Lind'
                      -
                        id: 41
                        name: 'Dr. Brady Hill'
                      -
                        id: 42
                        name: 'Tommie Russel'
                      -
                        id: 43
                        name: 'Blair Feest IV'
                      -
                        id: 44
                        name: 'Dr. Adah Wiegand'
                      -
                        id: 45
                        name: 'Prof. Billie Kuvalis Jr.'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Kara Jenkins'
      tags:
        - Section
      security: []
tags:
  -
    name: AcademicRegistration
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: Course
    description: ''
  -
    name: Department
    description: "\nThis Api Department"
  -
    name: 'Edit Mark'
    description: "\nThis Api For teacher to Move"
  -
    name: Move
    description: "\nThis Api For teacher to Move"
  -
    name: Note
    description: ''
  -
    name: Post
    description: ''
  -
    name: Section
    description: "\nThis Api Section"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
